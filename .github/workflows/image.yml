# Build container image for deployment
name: Image

on:
  release:
    types: [published]

  workflow_dispatch:

env:
  TEST_TAG: michaelfung/mojo-app:test

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: local
          key: ${{ runner.os }}-deps-local-${{ hashFiles('cpanfile*') }}

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          docker run --rm -t -v `pwd`:/app -w /app michaelfung/perl-devel:5.32.1 carton install --deployment

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: release.Dockerfile
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Run unit test with image
        run: |
          docker run --rm -t ${{ env.TEST_TAG }} /app/run-test.sh

      - name: Generate image tag
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            michaelfung/mojo-app
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: release.Dockerfile
          push: true
          tags: ghcr.io/${{ steps.meta.outputs.tags }}
